<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_notifHome.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 13</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_notifHome.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABQRBgARDwU0fGUY1Zp8HvBPQBGFAAAABgcFBgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgwFAAAAABaCaBnM1awo/62JJPNHMht/AAAADxEM
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAv5slAEA0DW+1kiL906kq/5Vs
        MPpZPCW6VDgie0UuHWsTDQkoSzMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCgQAAAAAGXZf
        F8rRqSf/wJMw/5ppO/+WZTr/jmA3/1g7JMgKBgYfFQ4KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABvWhYALiYKWqaGIPXTqSn/qns3/5poPP+dajz/jV83/z8rG34AAAAAAAABAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAUEAQAAAAAJYE4TnsagJf/Gmy3/n207/5tpPP+cajz/ckwt5xoRDEZ1TTMAAAAAAAQC
        AgAAAAAHHhQOORAMCTgiFxAABQUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AH//wAB//+AA///gAf//4AH///8B////w/8=
</value>
  </data>
</root>